// <auto-generated />
using JadeLikeFairies.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace JadeLikeFairies.Data.Migrations
{
    [DbContext(typeof(FairiesContext))]
    partial class FairiesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("JadeLikeFairies.Data.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedDate");

                    b.Property<string>("Hint");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("JadeLikeFairies.Data.Novel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AltTitles");

                    b.Property<long>("CreatedDate");

                    b.Property<string>("Title");

                    b.Property<int>("TypeId");

                    b.Property<long>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedDate");

                    b.HasIndex("Title", "AltTitles");

                    b.ToTable("Novels");
                });

            modelBuilder.Entity("JadeLikeFairies.Data.NovelGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedDate");

                    b.Property<int>("GenreId");

                    b.Property<int>("NovelId");

                    b.Property<long>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("NovelId");

                    b.ToTable("NovelGenres");
                });

            modelBuilder.Entity("JadeLikeFairies.Data.NovelTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedDate");

                    b.Property<int>("NovelId");

                    b.Property<int>("TagId");

                    b.Property<long>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("NovelId");

                    b.HasIndex("TagId");

                    b.ToTable("NovelTags");
                });

            modelBuilder.Entity("JadeLikeFairies.Data.NovelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("JadeLikeFairies.Data.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedDate");

                    b.Property<string>("Hint");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("JadeLikeFairies.Data.Novel", b =>
                {
                    b.HasOne("JadeLikeFairies.Data.NovelType", "Type")
                        .WithMany("Novels")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JadeLikeFairies.Data.NovelGenre", b =>
                {
                    b.HasOne("JadeLikeFairies.Data.Genre", "Genre")
                        .WithMany("Novels")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JadeLikeFairies.Data.Novel", "Novel")
                        .WithMany("Genres")
                        .HasForeignKey("NovelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JadeLikeFairies.Data.NovelTag", b =>
                {
                    b.HasOne("JadeLikeFairies.Data.Novel", "Novel")
                        .WithMany("Tags")
                        .HasForeignKey("NovelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JadeLikeFairies.Data.Tag", "Tag")
                        .WithMany("Novels")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
